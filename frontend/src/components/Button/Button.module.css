.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.6em 1.2em;
  border-radius: 8px;
  border: 1px solid transparent;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  cursor: pointer;
  transition: border-color 0.25s, background-color 0.25s, transform 0.1s;
}

.button:not(:disabled):active {
  transform: scale(0.97);
}

.button:focus {
  outline: none;
}

.button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

/* --- VARIANT STYLES --- */
/* When adding a new style, update the string literal in Button.tsx */
.base {
  background-color: var(--btn-base-bg);
  color: var(--btn-base-text);
}

.cancel {
  background-color: var(--btn-cancel-bg);
  color: var(--btn-cancel-text);
}

.disabled {
  background-color: var(--btn-disabled-bg);
  color: var(--btn-disabled-text);
  cursor: not-allowed;
}

.secondary {
  width: 50%;
  background-color: var(--btn-secondary-bg);
  color: var(--btn-secondary-text);
}

.icon {
  background: none;
  border: none;
  padding: 0; /* Override default padding */
}

.iconCircle {
  padding: 0.75rem;
  width: 44px;
  height: 44px;
  border: none;
  border-radius: 50%;
  background-color: var(--btn-base-bg);
  color: var(--btn-base-text);
  display: flex; /* These are for centering the icon inside */
  align-items: center;
  justify-content: center;
}

@media (hover: hover) {
  .base:not(:disabled):hover {
    background-color: var(--btn-base-bg-hover);
  }
  .cancel:not(:disabled):hover {
    background-color: var(--btn-cancel-bg-hover);
  }
  .secondary:not(:disabled):hover {
    background-color: var(--btn-secondary-bg-hover);
  }
  .icon:hover {
    /* No hover effect unless specified by parent */
    border-color: transparent;
  }
  .iconCircle:not(:disabled):hover {
    background-color: var(--btn-base-bg-hover);
  }
}
